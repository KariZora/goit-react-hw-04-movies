{"version":3,"sources":["components/api/api.js","components/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["axios","defaults","baseURL","getTrendingMovies","get","then","results","data","catch","error","console","log","searchMovies","name","getMovieDetails","id","getActorsListById","cast","getReviewsTextById","MovieDetailsPage","location","useLocation","history","useHistory","url","useRouteMatch","movieId","useParams","useState","movieDetails","setMovieDetails","castList","setCastList","reviewsText","setReviewsText","useEffect","backdrop_path","title","vote_average","overview","genresList","genres","reduce","list","img","responce","map","profile_path","character","src","alt","width","response","length","result","author","content","type","onClick","push","state","page","style","display","borderBottom","paddingBottom","marginRight","marginTop","activeClassName","to","fallback","path"],"mappings":"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","file":"static/js/MovieDetailsPage.cba28ffa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nconst getTrendingMovies = () => {\r\n  return axios\r\n    .get(`/trending/movie/day?api_key=381e4b32f80b6d35c69daa1c549c8820`)\r\n    .then((results) => results.data.results)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst searchMovies = (name) => {\r\n  return axios\r\n    .get(`/search/movie?api_key=381e4b32f80b6d35c69daa1c549c8820&query=${name}`)\r\n    .then((results) => results.data.results)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nconst getMovieDetails = (id) => {\r\n  return axios\r\n    .get(`/movie/${id}?api_key=381e4b32f80b6d35c69daa1c549c8820`)\r\n    .then((results) => results.data)\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nconst getActorsListById = (id) => {\r\n  return (\r\n    axios\r\n      .get(`/movie/${id}/credits?api_key=f9bd48f5e3b13d2262b70dc60f892c4d`)\r\n      .then((results) => results.data.cast)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  );\r\n};\r\n\r\nconst getReviewsTextById = (id) => {\r\n  return (\r\n    axios\r\n      .get(`/movie/${id}/reviews?api_key=f9bd48f5e3b13d2262b70dc60f892c4d`)\r\n      .then((results) => results.data.results)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  );\r\n};\r\n\r\nexport {\r\n  getTrendingMovies,\r\n  searchMovies,\r\n  getMovieDetails,\r\n  getActorsListById,\r\n  getReviewsTextById,\r\n};\r\n","import { useState, useEffect, Suspense } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useLocation,\r\n  useParams,\r\n  NavLink,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport {\r\n  getMovieDetails,\r\n  getActorsListById,\r\n  getReviewsTextById,\r\n} from \"../api/api\";\r\n\r\nconst MovieDetailsPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { url } = useRouteMatch();\r\n  const movieId = useParams().movieId;\r\n\r\n  const [movieDetails, setMovieDetails] = useState(\"\");\r\n  const [castList, setCastList] = useState(\"\");\r\n  const [reviewsText, setReviewsText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getMovieDetails(movieId).then(\r\n      ({ backdrop_path, title, vote_average, overview, genres }) => {\r\n        const genresList = genres.reduce(\r\n          (list, { name }) => list + \" \" + name,\r\n          \"\"\r\n        );\r\n        const img = \"https://image.tmdb.org/t/p/w500\" + backdrop_path;\r\n        setMovieDetails({\r\n          img,\r\n          title,\r\n          vote_average,\r\n          overview,\r\n          genresList,\r\n        });\r\n      }\r\n    );\r\n\r\n    getActorsListById(movieId).then((responce) => {\r\n      setCastList(\r\n        responce.map(({ id, name, profile_path, character }) => {\r\n          if (profile_path === null) return \"\";\r\n          return (\r\n            <li key={id}>\r\n              <img\r\n                src={\"https://image.tmdb.org/t/p/w200\" + profile_path}\r\n                alt={name}\r\n                width=\"80px\"\r\n              />\r\n              <p>{name}</p>\r\n              <p>character: {character}</p>\r\n            </li>\r\n          );\r\n        })\r\n      );\r\n    });\r\n\r\n    getReviewsTextById(movieId).then((response) => {\r\n      if (response.length === 0) {\r\n        const errorMassage = (\r\n          <p>\r\n            <b>We dont have any reviews for this movie</b>\r\n          </p>\r\n        );\r\n        setReviewsText(errorMassage);\r\n        return;\r\n      }\r\n      const result = response.map(({ author, content, id }) => {\r\n        return (\r\n          <li key={id}>\r\n            <h2>Author: {author}.</h2>\r\n            <p>{content}</p>\r\n          </li>\r\n        );\r\n      });\r\n      setReviewsText(result);\r\n    });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => history.push(location?.state?.page || \"/\")}\r\n      >\r\n        Go back\r\n      </button>\r\n      <div style={{display:'flex', borderBottom: '1px solid grey', paddingBottom:'20px'}}>\r\n      <img style={{display: 'block', marginRight:'20px'}} src={movieDetails.img} alt=\"asd\" />\r\n      \r\n      <div>\r\n      <h2>{movieDetails.title}</h2>\r\n      <p>User Score: {movieDetails?.vote_average * 10 + \"%\"}</p>\r\n      <h3>Overview</h3>\r\n      <p>{movieDetails.overview}</p>\r\n      <h3>Genres</h3>\r\n      <p>{movieDetails.genresList}</p>\r\n      </div>\r\n      </div>\r\n      <div style={{borderBottom: '1px solid grey', marginTop:'7px'}}>\r\n        <p>Additional information</p>\r\n        <ul>\r\n          <li>\r\n            <NavLink activeClassName = 'NavLink--active' to={`${url}/cast`}>Cast</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink activeClassName = 'NavLink--active' to={`${url}/reviews`}>Reviews</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <Suspense fallback={<p>Идет загрузка...</p>}>\r\n        <Switch>\r\n          <Route path={`${url}/cast`}>\r\n            <ul>{castList}</ul>\r\n          </Route>\r\n          <Route path={`${url}/reviews`}>{reviewsText}</Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}